- Class: meta
  Course: cursoR
  Lesson: introducao
  Author: Dr. Denisson Silva
  Type: Standard
  Organization: UFMG
  Version: 2.4.4


- Class: text
  Output: Bem vind@ ao exercício de fixação, presione enter para iniciar.
  
- Class: cmd_question
  Output: adicione 2 e 2 usando usando o operador de soma.
  CorrectAnswer: 2 + 2
  AnswerTests: omnitest(correctExpr='2 + 2')
  Hint: justamente 2 + 2.  

- Class: cmd_question
  Output: subtraia 2 de 5 usando usando o operador de subtração.
  CorrectAnswer: 2 - 5
  AnswerTests: omnitest(correctExpr='2 - 5')
  Hint: justamente 2 - 5.  

- Class: cmd_question
  Output: multiplique 3 de 7 usando usando o operador de multiplicação.
  CorrectAnswer: 3 * 7
  AnswerTests: omnitest(correctExpr='3 * 7')
  Hint: justamente 3 * 7.   

- Class: cmd_question
  Output: divida 15 de 3 usando usando o operador de divisão.
  CorrectAnswer: 15 / 3
  AnswerTests: omnitest(correctExpr='15 / 3')
  Hint: justamente 15 / 3.    

- Class: cmd_question
  Output: extraia a raiz quadrada de 64 usando usando a função "square root".
  CorrectAnswer: sqrt(64)
  AnswerTests: omnitest(correctExpr='sqrt(64)')
  Hint: justamente 3 * 7.   

- Class: cmd_question
  Output: Crie um vetor contendo os elementos numéricos de 1 a 10.
  CorrectAnswer: 1:10
  AnswerTests: any_of_exprs('1:10', 'seq(1, 10, 1)', 'c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)')
  Hint: justamente 1:10 ou seq(1, 10, 1).     

- Class: cmd_question
  Output: Crie um vetor de 1 a 20 e salve no objeto a.
  CorrectAnswer: a <- 1:20
  AnswerTests: omnitest(correctExpr='a <- 1:20')
  Hint: Just type a <- 1:20.

- Class: cmd_question
  Output: Crie um vetor de 20 a 1 e salve no objeto b.
  CorrectAnswer: b <- 20:1
  AnswerTests: omnitest(correctExpr='b <- 20:1')
  Hint: Just type b <- 20:1. 

- Class: cmd_question
  Output: Crie um vetor de 1 a 50 e 49 a 1 e salve no objeto c.
  CorrectAnswer: c <- c(1:50, 49:1)
  AnswerTests: omnitest(correctExpr='c <- c(1:50, 49:1)')
  Hint: Just type c <- c(1:50, 49:1).  

- Class: cmd_question
  Output: Crie um vetor character (texto) no objeto "e", com as seguintes frutas "manga", "goiaba", "laranja", "ciriguela".
  CorrectAnswer: e <- c("manga", "goiaba", "laranja", "ciriguela")
  AnswerTests: omnitest(correctExpr='e <- c("manga", "goiaba", "laranja", "ciriguela")')
  Hint: Just type e <- c("manga", "goiaba", "laranja", "ciriguela").  

- Class: cmd_question
  Output: Crie um vetor lógico no objeto "h", com os seguintes TRUE, FALSE, FALSE, TRUE, FALSE.
  CorrectAnswer: h <- c(TRUE, FALSE, FALSE, TRUE, FALSE)
  AnswerTests: omnitest(correctExpr='h <- c(TRUE, FALSE, FALSE, TRUE, FALSE)')
  Hint: Just type h <- c(TRUE, FALSE, FALSE, TRUE, FALSE). 

- Class: cmd_question
  Output: Crie um vetor numerico "i", com os seguintes 3.1416, 2.71, 1.666, 5
  CorrectAnswer: i <- c(3.1416, 2.71, 1.666, 5)
  AnswerTests: omnitest(correctExpr='i <- c(3.1416, 2.71, 1.666, 5)')
  Hint: Just type i <- c(3.1416, 2.71, 1.666, 5). 

- Class: cmd_question
  Output: Crie um vetor "k", com os seguintes "l", "m", "n", 1, 3, 4 
  CorrectAnswer: k <- c("l", "m", "n", 1, 3, 4 )
  AnswerTests: omnitest(correctExpr='k <- c("l", "m", "n", 1, 3, 4)')
  Hint: Just type k <- c("l", "m", "n", 1, 3, 4).   

- Class: cmd_question
  Output: Crie um vetor numerico "m", onde a sequencia 1,2,3 repete 10 vezes
  CorrectAnswer: m <- rep(c(1:3), 10)
  AnswerTests: omnitest(correctExpr='m <- rep(c(1:3), 10)')
  Hint: Just type m <- rep(c(1:3), 10).         

- Class: text
  Output: Agora vamos trabalhar com vetores, operações e subsetting.

- Class: cmd_question
  Output: crie o vetor x <- c(1, 4, 7, 9, 2)
  CorrectAnswer: x <- c(1, 4, 7, 9, 2)
  AnswerTests: omnitest(correctExpr='x <- c(1, 4, 7, 9, 2)');expr_creates_var('x')
  Hint: exatamente x <- c(1, 4, 7, 9, 2).

- Class: cmd_question
  Output: divida por 2 o vetor x recem criado
  CorrectAnswer: x/2
  AnswerTests: omnitest(correctExpr='x/2')
  Hint: exatamente x/2. 
 
- Class: cmd_question
  Output: eleve ao quadrado os elmentos do vetor x
  CorrectAnswer: x^2
  AnswerTests: omnitest(correctExpr='x^2')
  Hint: exatamente x^2. 

- Class: cmd_question
  Output: extraia a raiz quadrada dos elementos do vetor x
  CorrectAnswer: sqrt(x)
  AnswerTests: omnitest(correctExpr='sqrt(x)')
  Hint: exatamente sqrt(x). 
  
- Class: cmd_question
  Output: selecione (faça o subsetting) do elemento que está na segunda posição do vetor x
  CorrectAnswer: x[2]
  AnswerTests: omnitest(correctExpr='x[2]')
  Hint: exatamente x[2]. 

- Class: cmd_question
  Output: selecione os elementos que estão na posição 1 e 3 do vetor x
  CorrectAnswer: x[c(1, 3)]
  AnswerTests: omnitest(correctExpr='x[c(1, 3)]')
  Hint: exatamente x[c(1, 3)]. 

- Class: cmd_question
  Output: selecione todos elementos menos o que está na posição 3 do vetor x
  CorrectAnswer: x[c(-3)]
  AnswerTests: omnitest(correctExpr='x[c(-3)]')
  Hint: exatamente x[c(-3)].  

- Class: cmd_question
  Output: selecione todos elementos menos os que estão na posição 2 e 4 do vetor x
  CorrectAnswer: x[-c(2, 4))]
  AnswerTests: omnitest(correctExpr='x[-c(2, 4)]')
  Hint: exatamente x[-c(2, 4)].  

- Class: cmd_question
  Output: faça um teste se os valores dos elmentos do vetor x são iguais 4
  CorrectAnswer: x==4
  AnswerTests: omnitest(correctExpr='x==4')
  Hint: exatamente x==4. 

- Class: cmd_question
  Output: selecione o(s) elemento(s) que seu valor é igual a 4 do vetor x
  CorrectAnswer: x[x==4]
  AnswerTests: omnitest(correctExpr='x[x==4]')
  Hint: exatamente x[x==4]. 

- Class: cmd_question
  Output: selecione o(s) elemento(s) que seu valor é diferente de 7 do vetor x
  CorrectAnswer: x[x!=7]
  AnswerTests: omnitest(correctExpr='x[x!=7]')
  Hint: exatamente x[x!=7]. 

- Class: cmd_question
  Output: selecione o(s) elemento(s) que seu valor é maior que 3 do vetor x
  CorrectAnswer: x[x>3]
  AnswerTests: omnitest(correctExpr='x[x>3]')
  Hint: exatamente x[x>3]. 

- Class: cmd_question
  Output: crie o vetor y <- c(2, 5, 7, 7, 8)
  CorrectAnswer: y <- c(2, 5, 7, 7, 8)
  AnswerTests: omnitest(correctExpr='y <- c(2, 5, 7, 7, 8)');expr_creates_var('y')
  Hint: exatamente y <- c(2, 5, 7, 7).

- Class: cmd_question
  Output: Calcule a média do vetor y
  CorrectAnswer: mean(y)
  AnswerTests: omnitest(correctExpr='mean(y)')
  Hint: exatamente mean(y)

- Class: cmd_question
  Output: Calcule a soma dos elementos do vetor y
  CorrectAnswer: sum(y)
  AnswerTests: omnitest(correctExpr='sum(y)')
  Hint: exatamente sum(y) 

- Class: cmd_question
  Output: Calcule o desvio padrão dos elementos do vetor y
  CorrectAnswer: sd(y)
  AnswerTests: omnitest(correctExpr='sd(y)')
  Hint: exatamente sd(y)  

- Class: cmd_question
  Output: Identidique o tamanho do vetor y
  CorrectAnswer: length(y)
  AnswerTests: omnitest(correctExpr='length(y)')
  Hint: exatamente length(y)  

- Class: cmd_question
  Output: Identidique a mediana do vetor y
  CorrectAnswer: median(y)
  AnswerTests: omnitest(correctExpr='median(y)')
  Hint: exatamente median(y)  

- Class: cmd_question
  Output: crie o vetor t_missing com os seguinte elementos 25, 15, NA, 50, NA, 18
  CorrectAnswer: t_missing <- c(25, 15, NA, 50, NA, 18)
  AnswerTests: omnitest(correctExpr='t_missing <- c(25, 15, NA, 50, NA, 18)');expr_creates_var('t_missing')
  Hint: exatamente t_missing <- c(25, 15, NA, 50, NA, 18).

- Class: cmd_question
  Output: crie o vetor s_missing aplicando a funcao is.na para selecionar os valores que nao sao missing
  CorrectAnswer: s_missing <- t_missing[!is.na(t_missing)]
  AnswerTests: omnitest(correctExpr='s_missing <- t_missing[!is.na(t_missing)]');expr_creates_var('s_missing')
  Hint: exatamente s_missing <- t_missing[!is.na(t_missing)].

- Class: cmd_question
  Output: Calcule a média do vetor s_missing
  CorrectAnswer: mean(s_missing)
  AnswerTests: omnitest(correctExpr='mean(s_missing)')
  Hint: exatamente mean(s_missing) 

- Class: cmd_question
  Output: use a funcao help  para saber como calcula a média quando há algum valor missing
  CorrectAnswer: help("mean")
  AnswerTests: omnitest(correctExpr='help("mean")')
  Hint: exatamente help("mean") 

- Class: cmd_question
  Output: agora calcule a média do vetor t_missing
  CorrectAnswer: mean(t_missing, na.rm = TRUE)
  AnswerTests: omnitest(correctExpr='mean(t_missing, na.rm = TRUE)')
  Hint: exatamente mean(t_missing, na.rm = TRUE)

- Class: cmd_question
  Output: agora calcule o desvio padrão do vetor t_missing
  CorrectAnswer: sd(t_missing, na.rm = TRUE)
  AnswerTests: omnitest(correctExpr='sd(t_missing, na.rm = TRUE)')
  Hint: exatamente sd(t_missing, na.rm = TRUE)
